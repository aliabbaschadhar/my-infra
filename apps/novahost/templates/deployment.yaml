# Web Application Deployment
{{- if .Values.web.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novahost.fullname" . }}-web
  labels:
    {{- include "novahost.labels" . | nindent 4 }}
    component: web
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "novahost.selectorLabels" . | nindent 6 }}
      component: web
  template:
    metadata: 
      labels:
        {{- include "novahost.selectorLabels" . | nindent 8 }}
        component: web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novahost.serviceAccountName" . }}
      securityContext: 
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: web
          securityContext: 
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.port }}
              protocol: TCP
          env:
            # Database
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database }}
                  key: DATABASE_URL
            # Redis
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redis }}
                  key: REDIS_URL
            # OAuth
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth }}
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth }}
                  key: GOOGLE_CLIENT_SECRET
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth }}
                  key: GITHUB_CLIENT_ID
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth }}
                  key: GITHUB_CLIENT_SECRET
            # App config
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NEXTAUTH_SECRET
            - name: NEXTAUTH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NEXTAUTH_URL
            - name: NODE_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NODE_ENV
            - name: RESEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: RESEND_API_KEY
            - name: EMAIL_FROM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: EMAIL_FROM
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}

# API Server Deployment
{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novahost.fullname" . }}-api
  labels:
    {{- include "novahost.labels" . | nindent 4 }}
    component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "novahost.selectorLabels" . | nindent 6 }}
      component: api
  template:
    metadata:
      labels:
        {{- include "novahost.selectorLabels" . | nindent 8 }}
        component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novahost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          env:
            # Database
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database }}
                  key: DATABASE_URL
            # Redis
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redis }}
                  key: REDIS_URL
            # R2 Storage
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_ACCESS_KEY_ID
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_SECRET_ACCESS_KEY
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_ENDPOINT
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_BUCKET
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_REGION
            - name: BASE_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: BASE_PATH
            # App config
            - name: NODE_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NODE_ENV
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: JWT_SECRET
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}

# Build Server Deployment  
{{- if .Values.buildServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novahost.fullname" . }}-build-server
  labels:
    {{- include "novahost.labels" . | nindent 4 }}
    component: build-server
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "novahost.selectorLabels" . | nindent 6 }}
      component: build-server
  template:
    metadata:
      labels:
        {{- include "novahost.selectorLabels" . | nindent 8 }}
        component: build-server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novahost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: build-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.buildServer.image.repository }}:{{ .Values.buildServer.image.tag }}"
          imagePullPolicy: {{ .Values.buildServer.image.pullPolicy }}
          env:
            # Database
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database }}
                  key: DATABASE_URL
            # Redis
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redis }}
                  key: REDIS_URL
            # R2 Storage
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_ACCESS_KEY_ID
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_SECRET_ACCESS_KEY
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_ENDPOINT
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_BUCKET
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: S3_REGION
            - name: BASE_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: BASE_PATH
            # Build server specific
            - name: DOCKER_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.build }}
                  key: DOCKER_HOST
            - name: DOCKER_TLS_CERTDIR
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.build }}
                  key: DOCKER_TLS_CERTDIR
            - name: DOCKER_TLS_VERIFY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.build }}
                  key: DOCKER_TLS_VERIFY
            # App config
            - name: NODE_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NODE_ENV
          resources:
            {{- toYaml .Values.buildServer.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}

# Reverse Proxy Deployment
{{- if .Values.reverseProxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novahost.fullname" . }}-reverse-proxy
  labels:
    {{- include "novahost.labels" . | nindent 4 }}
    component: reverse-proxy
spec:
  replicas: {{ .Values.reverseProxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "novahost.selectorLabels" . | nindent 6 }}
      component: reverse-proxy
  template:
    metadata:
      labels:
        {{- include "novahost.selectorLabels" . | nindent 8 }}
        component: reverse-proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novahost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: reverse-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.reverseProxy.image.repository }}:{{ .Values.reverseProxy.image.tag }}"
          imagePullPolicy: {{ .Values.reverseProxy.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.reverseProxy.service.port }}
              protocol: TCP
          env:
            # Database for project lookups
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database }}
                  key: DATABASE_URL
            # Redis
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redis }}
                  key: REDIS_URL
            # BASE_PATH from R2 secret
            - name: BASE_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.r2 }}
                  key: BASE_PATH
            # App config
            - name: NODE_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.app }}
                  key: NODE_ENV
          resources:
            {{- toYaml .Values.reverseProxy.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
